// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.Repository.Data;

#nullable disable

namespace backend.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250218193510_FixFacilitiesNumberType")]
    partial class FixFacilitiesNumberType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.Core.Entities.OwnerProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FacilitiesLocation")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FacilitiesNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<int>("UserCredentialId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserCredentialId")
                        .IsUnique();

                    b.ToTable("OwnerProfiles");
                });

            modelBuilder.Entity("backend.Core.Entities.UserCredential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("UserCredentials");
                });

            modelBuilder.Entity("backend.Core.Entities.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(11)");

                    b.Property<int>("UserCredentialId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserCredentialId")
                        .IsUnique();

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("backend.Core.Entities.OwnerProfile", b =>
                {
                    b.HasOne("backend.Core.Entities.UserCredential", "UserCredential")
                        .WithOne("OwnerProfile")
                        .HasForeignKey("backend.Core.Entities.OwnerProfile", "UserCredentialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserCredential");
                });

            modelBuilder.Entity("backend.Core.Entities.UserProfile", b =>
                {
                    b.HasOne("backend.Core.Entities.UserCredential", "UserCredential")
                        .WithOne("UserProfile")
                        .HasForeignKey("backend.Core.Entities.UserProfile", "UserCredentialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserCredential");
                });

            modelBuilder.Entity("backend.Core.Entities.UserCredential", b =>
                {
                    b.Navigation("OwnerProfile");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
